CREATE OR REPLACE PACKAGE Module_BCBusinessObjectFunct AS
--{
    /*****************************************************************
    Propiedad intelectual de Open International Systems. (c).

    Package	: Nombre_paquete
    Descripción	: Descripción de la funcionalidad que realiza este paquete.

    Autor	: Nombre del creador de este paquete.
    Fecha	: DD-MM-YYYY (Fecha Creación Paquete)  SAO (No Orden de Producción.)

    Historia de Modificaciones

    DD-MM-YYYY    <Autor>.SAONNNNN        Modificación
    -----------  -------------------    -------------------------------------

    ******************************************************************/

    --------------------------------------------------------------------
    -- Constantes
    -------------------------------------------------------------------- 
    --------------------------------------------------------------------
    -- Variables
    -------------------------------------------------------------------- 
    -------------------------------------------------------------------- 
    -- Cursores
    -------------------------------------------------------------------- 
    -----------------------------------
    -- Metodos publicos del package
    -----------------------------------

    -- Obtiene la Version actual del Paquete
    FUNCTION fsbVersion  return varchar2;

--}
END Module_BCBusinessObjectFunct;
/
CREATE OR REPLACE PACKAGE BODY Module_BCBusinessObjectFunct AS
    /*****************************************************************
    Propiedad intelectual de Open International Systems. (c).

    Package	: Nombre_paquete
    Descripción	: Descripción de la funcionalidad que realiza este paquete.

    Autor	: Nombre del creador de este paquete.
    Fecha	: DD-MM-YYYY (Fecha Creación Paquete)  SAO (No Orden de Producción.)

    Historia de Modificaciones

    DD-MM-YYYY    <Autor>.SAONNNNN        Modificación
    -----------  -------------------    -------------------------------------

    ******************************************************************/

    -----------------------
    -- Constants
    -----------------------
    -- Constante con el SAO de la ultima version aplicada
    csbVERSION CONSTANT VARCHAR2(10) := 'SAOXXXXX';
    
    /*****************************************************************
    Propiedad intelectual de Open International Systems. (c).

    Procedure	: fsbVersion
    Descripcion	:
    
    Parametros	:	Descripcion
    Retorno     :
    	csbVersion        Version del Paquete

    Autor	   :
    Fecha	   :

    Historia de Modificaciones
    Fecha	ID Entrega
    Modificación

    02-06-2009
    Creación
    *****************************************************************/
    FUNCTION fsbVersion
    RETURN varchar2
    IS
    BEGIN
    --{
        pkErrors.Push('Module_BCBusinessObjectFunct.fsbVersion');

        pkErrors.Pop;
        -- Retorna el SAO con que se realizo la ultima entrega
        RETURN (csbVersion);
    EXCEPTION
        WHEN LOGIN_DENIED THEN
        	pkErrors.Pop;
        	RAISE LOGIN_DENIED;
        WHEN pkConstante.exERROR_LEVEL2 THEN
        	pkErrors.Pop;
        	RAISE pkConstante.exERROR_LEVEL2;
        WHEN OTHERS THEN
        	pkErrors.NotifyError( pkErrors.fsbLastObject, sqlerrm, sbErrMsg );
        	pkErrors.Pop;
        	raise_application_error( pkConstante.nuERROR_LEVEL2, sbErrMsg );
    --}
    END fsbVersion;
    

    /*****************************************************************
    Propiedad intelectual de Open International Systems. (c).

    Procedure	: ProcedureName
    Descripcion	:

    Parametros	:	Descripcion
    Retorno     :
    	csbVersion        Version del Paquete

    Autor	   :
    Fecha	   :

    Historia de Modificaciones
    Fecha	ID Entrega
    Modificación

    02-06-2009
    Creación
    ******************************************************************/
    PROCEDURE ProcedureName
    (
        param1          in/out    dataType,
        param2          in/out    dataType,
           .
           .
           .
        paramn          in/out    dataType
    )
    IS
    BEGIN

        pkErrors.Push('fa_bcConfiguraFact.Consulta_Padre_Virtual');

        -- Codigo necesario

        pkErrors.Pop;

    EXCEPTION
        when LOGIN_DENIED OR pkConstante.exERROR_LEVEL2 then
            pkErrors.Pop;
            raise;
        when ex.CONTROLLED_ERROR then
            pkErrors.Pop;
            raise;
        when OTHERS then
            pkErrors.NotifyError(pkErrors.fsbLastObject, sqlerrm, sbErrMsg);
            pkErrors.Pop;
            raise_application_error(pkConstante.nuERROR_LEVEL2, sbErrMsg);
     END ProcedureName;

END Module_BCBusinessObjectFunct;
/
